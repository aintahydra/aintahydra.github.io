<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Ain&#39;t a creature shitting out of mouth</title>
    <link>https://aintahydra.github.io/post/</link>
    <description>Recent content in Posts on Ain&#39;t a creature shitting out of mouth</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 26 Aug 2023 21:39:49 +0900</lastBuildDate><atom:link href="https://aintahydra.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cheatsheet</title>
      <link>https://aintahydra.github.io/post/forensics/cheatsheet/</link>
      <pubDate>Sat, 26 Aug 2023 21:39:49 +0900</pubDate>
      
      <guid>https://aintahydra.github.io/post/forensics/cheatsheet/</guid>
      <description>A forensic cheet sheet get hash from a file - Windows `PS&amp;gt; get-filehash -algorithm sha1 &amp;lt;filename&amp;gt;` - Linux `md5sum|sha256sum &amp;lt;filename&amp;gt;` - Malware hashes - https://virustotal.com/ - https://hash.cymru.com/ Search search a file name: find &amp;lt;DIR&amp;gt; -name &amp;lt;filename&amp;gt;
search a string: grep -r &amp;lt;search_string&amp;gt; &amp;lt;targetFILES&amp;gt; ([--include &#39;*.conf&#39;]
or find . -type f -print | xargs grep -i &amp;quot;search_string&amp;quot; /dev/null or find . -name &#39;*.ext&#39; | xargs grep -r --color=auto -n 2&amp;gt;dev/null &#39;search_string&#39; (search and color them) search a string from a binary: $ strings &amp;lt;binary_file&amp;gt; | grep &amp;lt;search_string&amp;gt;</description>
    </item>
    
    <item>
      <title>Install OWAS ASST</title>
      <link>https://aintahydra.github.io/post/etc/owasp-asst-install/</link>
      <pubDate>Tue, 13 Jun 2023 05:37:53 +0900</pubDate>
      
      <guid>https://aintahydra.github.io/post/etc/owasp-asst-install/</guid>
      <description>ref https://owasp.org/ASST/ install XAMPP -&amp;gt; FAIL https://sourceforge.net/projects/xampp/ -&amp;gt; cannot install on LinuxVM on Apple silicon M2 (since XAMPP for Linux is only available for x64) Install Necessaries Apache2 $ sudo apt install apache2 mariadb-server MariaDB $ sudo systemctl enable --now mariadb $ systemctl status mariadb PHP $ sudo apt install php Perl $ sudo apt install perl Node.js $ sudo apt install -y nodejs npm Set a specific version of Node.</description>
    </item>
    
    <item>
      <title>DVWA Walkthrough</title>
      <link>https://aintahydra.github.io/post/etc/proxy-mitmproxy/</link>
      <pubDate>Sun, 12 Mar 2023 09:19:43 +0900</pubDate>
      
      <guid>https://aintahydra.github.io/post/etc/proxy-mitmproxy/</guid>
      <description>===========
Tip: common to burp suite, mitmproxy, and proxify When a DVWM instance is running on a local machine and accessed by 127.0.0.1:PORT, local proxy cannot intercept HTTP request correctly. After a series of trial and error, the solution found was accessing the instance using a name, like:
add a line to the hosts file: 127.0.0.1 DVWA visit DVWA:PORT instead of 127.0.0.1:PORT =================
mitmproxy install KALI: mitmproxy is already installed on Kali.</description>
    </item>
    
    <item>
      <title>DVWA Walkthrough</title>
      <link>https://aintahydra.github.io/post/etc/dvwa-walkthrough/</link>
      <pubDate>Sat, 11 Mar 2023 08:15:23 +0900</pubDate>
      
      <guid>https://aintahydra.github.io/post/etc/dvwa-walkthrough/</guid>
      <description>DVWA Walkthrough (Low level) Low: XSS (DOM) Vulnerablility URL: http://127.0.0.1:42001/vulnerabilities/xss_d/
How to test: https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/11-Client_Side_Testing/01-Testing_for_DOM-based_Cross_Site_Scripting.html
Observation 1
Pick any language from the dropdown list, then press the Select button. If the selected language is &amp;ldquo;English&amp;rdquo; then, the address will be changed to http://127.0.0.1:42001/vulnerabilities/xss_d/?default=English Modify the address to http://127.0.0.1:42001/vulnerabilities/xss_d/?default=Assyrian , then Assyrian will be appeared in the dropdown list. page source &amp;lt;div class=&amp;#34;vulnerable_code_area&amp;#34;&amp;gt; &amp;lt;p&amp;gt;Please choose a language:&amp;lt;/p&amp;gt; &amp;lt;form name=&amp;#34;XSS&amp;#34; method=&amp;#34;GET&amp;#34;&amp;gt; &amp;lt;select name=&amp;#34;default&amp;#34;&amp;gt; &amp;lt;script&amp;gt; if (document.</description>
    </item>
    
    <item>
      <title>Install OpenVAS(GVM) on Kali</title>
      <link>https://aintahydra.github.io/post/etc/openvas_gvm/</link>
      <pubDate>Sat, 04 Mar 2023 20:16:46 +0900</pubDate>
      
      <guid>https://aintahydra.github.io/post/etc/openvas_gvm/</guid>
      <description>GVM? (or OpenVAS?) Greenbone Vulnerability Manager(GVM, a.k.a OpenVAS). OpenVAS is a fork of Nessus. Install GVM How to install OpenVAS on Kali: sudo apt install openvas
tried gvm-setup, but Error occured:
$ sudo gvm-setup [&amp;gt;] Starting PostgreSQL service [-] ERROR: The default PostgreSQL version (15) is not 16 that is required by libgvmd [-] ERROR: Use pg_upgradecluster to update your PostgreSQL cluster solve the problem
$ psql --version psql (PostgreSQL) 16.</description>
    </item>
    
    <item>
      <title>peda and gdb</title>
      <link>https://aintahydra.github.io/post/etc/gdb-peda/</link>
      <pubDate>Sat, 04 Mar 2023 20:16:46 +0900</pubDate>
      
      <guid>https://aintahydra.github.io/post/etc/gdb-peda/</guid>
      <description>install peda Clone PEDA git clone https://github.com/longld/peda.git ~/peda set gdbinit $ vi ~/.gdbinit define init-peda source ~/peda/peda.py end document init-peda Init PEDA end Activate peda $ gdb (gdb) init-peda gdb-peda$ </description>
    </item>
    
    <item>
      <title>Testing Websockets 1</title>
      <link>https://aintahydra.github.io/post/etc/testing-websockets-1/</link>
      <pubDate>Sat, 04 Mar 2023 20:16:46 +0900</pubDate>
      
      <guid>https://aintahydra.github.io/post/etc/testing-websockets-1/</guid>
      <description>Intro Websocket enables a browser to be capable of synchronous communication using TCP Python/Java: Websocket / C#: signalR / nodejs: socket.io(long polling) [Traditional] Only when a browser sends a request -&amp;gt; A web server responses back to the request &amp;lt;- (asynchronous, unidirectional) [Websocket] After a connection is established between a browser and a webserver, whichever part can send messages any time via the connection (connection-oriented, bidirectional) included in HTML5 standards, supported by most browsers A simple websocket echo: a python server and an HTML client A Server in Python Prep.</description>
    </item>
    
    <item>
      <title>Installing Cobalt Strike</title>
      <link>https://aintahydra.github.io/post/redteamtools/installing-cobalt-strike/</link>
      <pubDate>Tue, 21 Feb 2023 06:45:51 +0900</pubDate>
      
      <guid>https://aintahydra.github.io/post/redteamtools/installing-cobalt-strike/</guid>
      <description>Cobalt strike References Cobalt Strike&amp;rsquo;s profile: https://blog.zsec.uk/cobalt-strike-profiles/ Hashs of various Coblat Strike versions: https://verify.cobaltstrike.com/ Craked versions (Chinese) https://www.cnblogs.com/ssooking/p/12535998.html?from=timeline https://www.ddosi.org/cobaltstrike-4-5-cracked/ https://github.com/Snowming04/CobaltStrike4.0_related https://breached.vc/Thread-Cobalt-Strike-4-4-Crack-Tool https://breached.vc/Thread-Cobalt-Strike-4-7 https://breached.vc/Thread-Cobalt-Strike-4-6-1-7-Brute-Ratel Raphael Mudge(the creator of Cobalt Strike)&amp;rsquo;s channel: https://www.youtube.com/@DashnineMedia &amp;ldquo;Cobalt Strike User Guide&amp;rdquo; by FORTRA, https://hstechdocs.helpsystems.com/manuals/cobaltstrike/current/userguide/content/topics/welcome_main.htm# Notes Well-known groups that use Cobalt Strike (https://attack.mitre.org/software/S0154/): FIN6, Iranian{CopyKittens}, NorthKorean{APT37}, Russian{Wizard Spider, Indrik Spider, APT29}, Vietnamese{APT32}, Chinese{Aquatic Panda, Chimera, Leviathan, Threat Group-3390, APT19, meenuPass, APT41, Mustang Panda, Earth Lusca}, DarkHydrus, FIN7, Cobalt Group Preparing VMs Team Server @ Xubuntu 22.</description>
    </item>
    
    <item>
      <title>Run DVWA on a Kali VM</title>
      <link>https://aintahydra.github.io/post/etc/dvwa-kali-m2/</link>
      <pubDate>Tue, 21 Feb 2023 06:45:51 +0900</pubDate>
      
      <guid>https://aintahydra.github.io/post/etc/dvwa-kali-m2/</guid>
      <description>===========
CAUTION - DO NOT be bothered by manually installing DVWA (Hightly possibly, it will fail). ===========
Installing VMs Tip: VMWare-Tools for Ubuntu/Kali VM on VMWare Fusion Installing VMWare-Tools $ sudo apt install open-vm-tools when shared folder doesn&amp;rsquo;t work even after the vmware-tools are installed $ sudo umount /mnt/hgfs $ sudo mount -t fuse.vmhgfs-fuse .host:/ /mnt/hgfs -o allow_other Install Kali (.iso) on VMWare Fusion on Apple silicon(M2) Download Kali .iso for Apple silicon: https://cdimage.</description>
    </item>
    
    <item>
      <title>Virtualbox Networking Modes</title>
      <link>https://aintahydra.github.io/post/etc/virtualbox-networking-modes/</link>
      <pubDate>Sat, 18 Feb 2023 05:58:55 +0900</pubDate>
      
      <guid>https://aintahydra.github.io/post/etc/virtualbox-networking-modes/</guid>
      <description>References https://www.virtualbox.org/manual/ch06.html https://www.nakivo.com/blog/virtualbox-network-setting-guide/ ViratualBox Network Modes Not attached (No connection) NAT NAT Network Bridged Adapter Internal networking Host-only Generic (shared with the host) NAT Sufficient in most cases Internet-enabled: from Internal network to Internet access is possible Guests on internel network CANNOT talk each other (from www.nakivo.com) Enabling NAT for a VM with VBoxManage: VBoxManage modifyvm VM_name --nic1 nat VM_name: name of a virtual machine nic1: number of virtual machine adapter NAT Network Similar to NAT, but guest CAN talk each other basically,, CANNOT access guest machines either from the host or from external network However, &amp;ldquo;Port forwarding&amp;rdquo; enables the host or the machines of the host network to access guests A built-in VBox NAT router uses Network address and name can be changed: (Global preference) File &amp;gt; Preferences &amp;gt; Network &amp;gt; Edit the settings(icon): Default address 10.</description>
    </item>
    
    <item>
      <title>Simple XOR Decoding With Ghidra</title>
      <link>https://aintahydra.github.io/post/reversing/simple-xor-decoding-with-ghidra/</link>
      <pubDate>Thu, 16 Feb 2023 16:46:10 +0900</pubDate>
      
      <guid>https://aintahydra.github.io/post/reversing/simple-xor-decoding-with-ghidra/</guid>
      <description>References Talks by Dr. Josh Stroschein, &amp;ldquo;Using Ghidra to Statically XOR Obfuscated Shellcode&amp;rdquo; (https://www.youtube.com/watch?v=DgaPPixn9k4) The author&amp;rsquo;s blog: https://0xevilc0de.com/ &amp;ldquo;Repository that provides sample codes mimicking real malware&amp;rdquo; (https://github.com/jstrosch/learning-malware-analysis ) Steps Create a new project Import a shellcode (shellcode.bin provided by the author) Tell Language: x86 (visual studio) The analyzed result shows up Go to the first offset (00000000) (at this moment, the codes seem to be a series of random bytes) &amp;lsquo;D&amp;rsquo; or &amp;lsquo;Disassemble&amp;rsquo; (now, the unpacking codes will show up) Codes The first jump (at 00000000) goes to 00000016 CALL FUN_00000002 Looking at the codes from 00000002, there is function that works as a XOR decoder: 0x186 and 0x97 seem to be the size of the packed code and the encoding key from the code above, 00000009 XOR byte ptr DS:[EAX + ECX*1],0x97 0000000e TEST ECX,ECX 00000010 JNZ LAB_00000008 EAX is a location (of the encoded shell codes).</description>
    </item>
    
    <item>
      <title>Create Github Pages With Hugo</title>
      <link>https://aintahydra.github.io/post/etc/create-github-pages-with-hugo/</link>
      <pubDate>Mon, 13 Feb 2023 05:37:53 +0900</pubDate>
      
      <guid>https://aintahydra.github.io/post/etc/create-github-pages-with-hugo/</guid>
      <description>Create a static github page with Hugo Install Hugo on Ubuntu 22.04 apt install hugo Create github repositories Login to github.com; Create two repositories:
[PAGE_SRC_REPO] contains sources; a regular github repo. [GITHUB_IO_REPO] contains rendered pages Tts name should be_USER_NAME_.github.io, and needs to be public Move to the newly created repository -&amp;gt; &amp;lsquo;Settings&amp;rsquo; -&amp;gt; &amp;lsquo;Pages&amp;rsquo;, then set Source: Deploy from a branch Branch: master / root Create a hugo site mkdir ~/webpages; cd ~/webpages hugo new site hugo_pages Install a theme (as a submodule) Visit https://themes.</description>
    </item>
    
    <item>
      <title>Install Ghidra</title>
      <link>https://aintahydra.github.io/post/reversing/install-ghidra/</link>
      <pubDate>Mon, 13 Feb 2023 03:13:34 +0900</pubDate>
      
      <guid>https://aintahydra.github.io/post/reversing/install-ghidra/</guid>
      <description>Install Java Visit the Oracle page (https://www.oracle.com/java/technologies/downloads/ ) Download an installation .deb package Install JDK Set alternatives sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-19/bin/java 1 sudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/jdk-19/bin/javac 1 sudo update-alternatives --install /usr/bin/jar jar /usr/lib/jvm/jdk-19/bin/jar 1 set JAVA_HOME properly Install Ghidra Download the ghidra: https://github.com/NationalSecurityAgency/ghidra/releases Place the ghidra properly (e.g., under /usr/local) Create a symbolic links at your conveniences sudo ln -s DOWNLOADED_GHIDRA /usr/local/ghidra sudo ln -s /usr/local/ghidra/ghidraRun /usr/local/bin/ghidraRun Create a Ghidra.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://aintahydra.github.io/post/lang/programming-golang-prelude/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aintahydra.github.io/post/lang/programming-golang-prelude/</guid>
      <description>Prelude installation sudo apt install golang-go </description>
    </item>
    
  </channel>
</rss>
